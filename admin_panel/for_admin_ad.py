# PairCode/admin_panel/for_admin_ad.py

import os
import logging
from aiogram import F, Router
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from database.models import Advertisement
from aio.bot_token import bot
from database.engine import async_sessions
from aio.context.context_new_ad import AdInputState

router = Router()
ADMIN_IDS = [826039504, 6091410541]

logger = logging.getLogger(__name__)

@router.message(Command("admin_ad_158"))
async def start_ad_input(message: Message, state: FSMContext):
    if message.from_user.id not in ADMIN_IDS:
        await message.answer("‚õî –£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        return

    await message.answer("‚úèÔ∏è –í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ–π —Ä–µ–∫–ª–∞–º—ã:")
    await state.set_state(AdInputState.text)


@router.message(AdInputState.text)
async def receive_ad_text(message: Message, state: FSMContext):
    await state.update_data(text=message.text)
    await message.answer("üìé –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –∫–∞—Ä—Ç–∏–Ω–∫—É –∏–ª–∏ –Ω–∞–∂–º–∏ /skip_ad_image, –µ—Å–ª–∏ –±–µ–∑ –Ω–µ—ë")
    await state.set_state(AdInputState.image)


@router.message(AdInputState.image, F.photo)
async def receive_ad_image(message: Message, state: FSMContext):
    photo = message.photo[-1]
    file_path = f"media/ad_{photo.file_unique_id}.jpg"
    os.makedirs("media", exist_ok=True)

    file = await bot.get_file(photo.file_id)
    await bot.download_file(file.file_path, destination=file_path)

    data = await state.get_data()
    ad_text = data.get("text", "–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞")

    async with async_sessions() as session:
        ad = Advertisement(text=ad_text, image_path=file_path)
        session.add(ad)
        await session.commit()

    await state.clear()
    await message.answer("‚úÖ –†–µ–∫–ª–∞–º–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")


@router.message(AdInputState.image, Command("skip_ad_image"))
async def skip_image(message: Message, state: FSMContext):
    data = await state.get_data()

    async with async_sessions() as session:
        ad = Advertisement(text=data['text'], image_path=None)
        session.add(ad)
        await session.commit()

    await message.answer("‚úÖ –†–µ–∫–ª–∞–º–∞ –±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")
    await state.clear()


@router.message(AdInputState.image)
async def not_photo(message: Message):
    await message.answer("‚õî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –∏–º–µ–Ω–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –Ω–∞–∂–º–∏ /skip_ad_image")
